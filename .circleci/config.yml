# .circleci/config.yml

version: 2.1

defaults: &defaults
  macos:
    xcode: '14.2.0'
  working_directory: ~/aws-appsync-realtime-client-ios
  environment:
      BUNDLE_PATH: vendor/bundle

references:
  repo_cache_key: &repo_cache_key
    v1-repo-{{ .Branch }}-{{ .Revision }}

  restore_repo: &restore_repo
    restore_cache:
      keys:
        - *repo_cache_key
        - v1-repo-{{ .Branch }}
        - v1-repo

  pods_cache_key: &pods_cache_key
    v3-dependency-pods-{{ checksum "~/aws-appsync-realtime-client-ios/Podfile" }}
  
  pods_backup_cache_key: &pods_backup_cache_key
    v3-dependency-pods

  restore_pods: &restore_pods
    restore_cache:
      keys:
        - *pods_cache_key
        - *pods_backup_cache_key

  plugin_pods_cache_key: &plugin_pods_cache_key

commands:
  pre_start_simulator:
    description: >-
      pre start simulator, build may fail if simulator is not started
    steps:
      - run:
          name: Pre-start simulator
          command: bash ~/aws-appsync-realtime-client-ios/CircleciScripts/pre_start_simulator.sh

  restore_gems:
    steps:
      - restore_cache:
          keys:
            - app-{{ .Environment.CACHE_VERSION }}-gems-{{ checksum "~/aws-appsync-realtime-client-ios/Gemfile.lock" }}
            - app-{{ .Environment.CACHE_VERSION }}-gems-

  check_bundle:
    steps:
      - run:
          name: Check bundle
          command: bundle check --path $BUNDLE_PATH || bundle install --path $BUNDLE_PATH

  save_plugin_pods:
    parameters:
      prefix:
        type: string
    steps:
      - save_cache:
          key: v1-<< parameters.prefix >>-dependency-pods-{{ checksum "Podfile" }}
          paths:
            - ./Pods 
  
  restore_plugin_pods:
    parameters:
      prefix:
        type: string
    steps:
      - restore_cache:
          keys: 
            - v1-<< parameters.prefix >>-dependency-pods-{{ checksum "Podfile" }}
            - v1-<< parameters.prefix >>-dependency-pods

jobs:
  checkout_code:
    <<: *defaults
    steps:
      - *restore_repo
      - checkout
      - save_cache:
          key: *repo_cache_key
          paths: 
            - ~/aws-appsync-realtime-client-ios
  
  install_gems:
    <<: *defaults
    steps:
      - *restore_repo
      - restore_gems
      - run:
          name: Bundle install
          command: bundle config set --local path 'vendor/bundle' && bundle install
          environment:
            BUNDLE_JOBS: 4
            BUNDLE_RETRY: 3
      - save_cache:
          key: app-{{ .Environment.CACHE_VERSION }}-gems-{{ checksum "~/aws-appsync-realtime-client-ios/Gemfile.lock" }}
          paths:
            - vendor/bundle
  build_test_appsync_realtime_client:
    <<: *defaults
    steps:
      - *restore_repo
      - pre_start_simulator
      - restore_gems
      - run: bundle exec pod install
      - check_bundle
      - run:
          name: Build AppSyncRealTimeClient
          command: xcodebuild build-for-testing -workspace AppSyncRealTimeClient.xcworkspace -scheme AppSyncRealTimeClient -sdk iphonesimulator -destination "${destination}" | xcpretty
      - run:
          name: Test AppSyncRealTimeClient
          command: xcodebuild test -workspace AppSyncRealTimeClient.xcworkspace -scheme AppSyncRealTimeClient -sdk iphonesimulator -destination "${destination}" | xcpretty --simple --color --report junit
      - store_test_results:
          path: build/reports
  deploy:
    <<: *defaults
    description: deploy pods to trunk
    steps: 
      - *restore_repo
      - restore_gems
      - check_bundle
      - run:
          name: Release pods
          command: bundle exec fastlane release_pods
workflows:
  build_test_deploy:
    jobs:
      - checkout_code
      - install_gems:
          requires:
            - checkout_code
      - build_test_appsync_realtime_client:
          requires:
            - install_gems
      - deploy:
          filters:
            branches:
              only:
                - release
          requires:
            - build_test_appsync_realtime_client
